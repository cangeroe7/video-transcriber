CREATE TABLE IF NOT EXISTS "video-transcriber_account" (
	"user_id" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"provider_account_id" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "video-transcriber_account_provider_provider_account_id_pk" PRIMARY KEY("provider","provider_account_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "video-transcriber_folder" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "video-transcriber_folder_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"title" varchar(255) NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT "video-transcriber_folder_title_unique" UNIQUE("title")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "video-transcriber_folders_to_videos" (
	"folder_id" integer NOT NULL,
	"video_id" integer NOT NULL,
	CONSTRAINT "video-transcriber_folders_to_videos_folder_id_video_id_pk" PRIMARY KEY("folder_id","video_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "video-transcriber_media" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "video-transcriber_media_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"url" varchar NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "video-transcriber_session" (
	"session_token" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "video-transcriber_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"email_verified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255)
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "video-transcriber_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "video-transcriber_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "video-transcriber_video" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "video-transcriber_video_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"title" varchar(255) NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"original_video_media_id" integer NOT NULL,
	"thumbnail_media_id" integer,
	"subtitles_url" varchar(255),
	"processed_video_url" varchar(255),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"updated_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_account" ADD CONSTRAINT "video-transcriber_account_user_id_video-transcriber_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."video-transcriber_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_folder" ADD CONSTRAINT "video-transcriber_folder_user_id_video-transcriber_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."video-transcriber_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_folders_to_videos" ADD CONSTRAINT "video-transcriber_folders_to_videos_folder_id_video-transcriber_folder_id_fk" FOREIGN KEY ("folder_id") REFERENCES "public"."video-transcriber_folder"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_folders_to_videos" ADD CONSTRAINT "video-transcriber_folders_to_videos_video_id_video-transcriber_video_id_fk" FOREIGN KEY ("video_id") REFERENCES "public"."video-transcriber_video"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_media" ADD CONSTRAINT "video-transcriber_media_user_id_video-transcriber_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."video-transcriber_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_session" ADD CONSTRAINT "video-transcriber_session_user_id_video-transcriber_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."video-transcriber_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_video" ADD CONSTRAINT "video-transcriber_video_user_id_video-transcriber_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."video-transcriber_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_video" ADD CONSTRAINT "video-transcriber_video_original_video_media_id_video-transcriber_media_id_fk" FOREIGN KEY ("original_video_media_id") REFERENCES "public"."video-transcriber_media"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "video-transcriber_video" ADD CONSTRAINT "video-transcriber_video_thumbnail_media_id_video-transcriber_media_id_fk" FOREIGN KEY ("thumbnail_media_id") REFERENCES "public"."video-transcriber_media"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_user_id_idx" ON "video-transcriber_account" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "session_user_id_idx" ON "video-transcriber_session" USING btree ("user_id");